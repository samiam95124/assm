{*******************************************************************************
*                                                                              *
*                         OPCODE INITIALIZATION MODULE                         *
*                                                                              *
*                       Copyright (C) 2006 S. A. Moore                         *
*                            All rights reserved                               *
*                                                                              *
* PURPOSE:                                                                     *
*                                                                              *
* Defines the opcodes for this assembler module.                               *
*                                                                              *
* WARNING: *** THIS FILE IS AUTOMATICALLY GENERATED. DO NOT MODIFY ***         *
*                                                                              *
* This file is generated by hastab from the input file opcode.lab. It defines  *
* the resini procedure, that initializes the reserved word table.              *
*                                                                              *
* CREATING:                                                                    *
*                                                                              *
* To create this file, run hashtab in this directory.                          *
*                                                                              *
*******************************************************************************}

module opcini;

uses utl,    { assembly support routines }
     opcdef, { opcode definition }
     macdef; { machine specific definition }

var ressym: restab; { reserved symbols table }

{*******************************************************************************
                                                                                
Initalize reserved word table                                                   
                                                                                
The reserved word table is an array of records, with each record containing a   
label, and a entry chain. The label is the actual reserved word itself. The     
chain is an index into the reserved word table itself. Each position (index) in 
the reserved word table corresponds to a 'hash' value for a given label. The    
hash value is a random function derived for the label that gives some level     
(typ > 90%) of 'uniqueness' for a given label (see the 'hash' routine for       
details of the process). Each 'prime' label occupys the entry cooresponding to  
it's hash value (a prime entry means that it is the first label for the hash    
value to be placed). Duplicate entrys are placed in locations that have no      
prime label. The chain fields then point to these labels succesively from the   
prime entry, terminated with 0. A lookup is performed by succesively examining  
each label in a chain, starting with the prime label, until a match is found    
or the end of a chain is reached.                                               
                                                                                
This routine sets up the labels and chain fields making up the table. The table 
should already be cleared.                                                      
                                                                                
*******************************************************************************}

procedure resini;

begin

   { labels }

   copy(ressym[opdec    ].reslab, 'dec       ');
   copy(ressym[opinirw  ].reslab, 'inirw     ');
   copy(ressym[opaddw   ].reslab, 'addw      ');
   copy(ressym[ophalt   ].reslab, 'halt      ');
   copy(ressym[oprlca   ].reslab, 'rlca      ');
   copy(ressym[opdecw   ].reslab, 'decw      ');
   copy(ressym[opdjnz   ].reslab, 'djnz      ');
   copy(ressym[opdivuw  ].reslab, 'divuw     ');
   copy(ressym[oplddr   ].reslab, 'lddr      ');
   copy(ressym[opinc    ].reslab, 'inc       ');
   copy(ressym[oprrca   ].reslab, 'rrca      ');
   copy(ressym[opcpdr   ].reslab, 'cpdr      ');
   copy(ressym[opsla    ].reslab, 'sla       ');
   copy(ressym[opldir   ].reslab, 'ldir      ');
   copy(ressym[opretn   ].reslab, 'retn      ');
   copy(ressym[opindr   ].reslab, 'indr      ');
   copy(ressym[opcpir   ].reslab, 'cpir      ');
   copy(ressym[opmultw  ].reslab, 'multw     ');
   copy(ressym[opdaa    ].reslab, 'daa       ');
   copy(ressym[opincw   ].reslab, 'incw      ');
   copy(ressym[opinir   ].reslab, 'inir      ');
   copy(ressym[opadd    ].reslab, 'add       ');
   copy(ressym[opreti   ].reslab, 'reti      ');
   copy(ressym[opldup   ].reslab, 'ldup      ');
   copy(ressym[opccf    ].reslab, 'ccf       ');
   copy(ressym[opiniw   ].reslab, 'iniw      ');
   copy(ressym[opdivu   ].reslab, 'divu      ');
   copy(ressym[opotdr   ].reslab, 'otdr      ');
   copy(ressym[opdivw   ].reslab, 'divw      ');
   copy(ressym[oplda    ].reslab, 'lda       ');
   copy(ressym[opoutd   ].reslab, 'outd      ');
   copy(ressym[opand    ].reslab, 'and       ');
   copy(ressym[opldd    ].reslab, 'ldd       ');
   copy(ressym[opout    ].reslab, 'out       ');
   copy(ressym[oppush   ].reslab, 'push      ');
   copy(ressym[opcpd    ].reslab, 'cpd       ');
   copy(ressym[opsbc    ].reslab, 'sbc       ');
   copy(ressym[opldi    ].reslab, 'ldi       ');
   copy(ressym[opneg    ].reslab, 'neg       ');
   copy(ressym[opind    ].reslab, 'ind       ');
   copy(ressym[opcpi    ].reslab, 'cpi       ');
   copy(ressym[opjar    ].reslab, 'jar       ');
   copy(ressym[opotir   ].reslab, 'otir      ');
   copy(ressym[opcpl    ].reslab, 'cpl       ');
   copy(ressym[opini    ].reslab, 'ini       ');
   copy(ressym[oprlc    ].reslab, 'rlc       ');
   copy(ressym[oprld    ].reslab, 'rld       ');
   copy(ressym[opdiv    ].reslab, 'div       ');
   copy(ressym[opouti   ].reslab, 'outi      ');
   copy(ressym[oprra    ].reslab, 'rra       ');
   copy(ressym[opsra    ].reslab, 'sra       ');
   copy(ressym[oprrc    ].reslab, 'rrc       ');
   copy(ressym[oprrd    ].reslab, 'rrd       ');
   copy(ressym[opscf    ].reslab, 'scf       ');
   copy(ressym[opsub    ].reslab, 'sub       ');
   copy(ressym[opret    ].reslab, 'ret       ');
   copy(ressym[opset    ].reslab, 'set       ');
   copy(ressym[opnop    ].reslab, 'nop       ');
   copy(ressym[opinw    ].reslab, 'inw       ');
   copy(ressym[oppop    ].reslab, 'pop       ');
   copy(ressym[oppcache ].reslab, 'pcache    ');
   copy(ressym[opsrl    ].reslab, 'srl       ');
   copy(ressym[opdeflef ].reslab, 'deflef    ');
   copy(ressym[oprla    ].reslab, 'rla       ');
   copy(ressym[opendmac ].reslab, 'endmac    ');
   copy(ressym[opexx    ].reslab, 'exx       ');
   copy(ressym[opbit    ].reslab, 'bit       ');
   copy(ressym[opdi     ].reslab, 'di        ');
   copy(ressym[opei     ].reslab, 'ei        ');
   copy(ressym[opxor    ].reslab, 'xor       ');
   copy(ressym[opld     ].reslab, 'ld        ');
   copy(ressym[opres    ].reslab, 'res       ');
   copy(ressym[oprst    ].reslab, 'rst       ');
   copy(ressym[opcp     ].reslab, 'cp        ');
   copy(ressym[opadc    ].reslab, 'adc       ');
   copy(ressym[opldud   ].reslab, 'ldud      ');
   copy(ressym[opim     ].reslab, 'im        ');
   copy(ressym[opin     ].reslab, 'in        ');
   copy(ressym[opmepu   ].reslab, 'mepu      ');
   copy(ressym[opmult   ].reslab, 'mult      ');
   copy(ressym[opjp     ].reslab, 'jp        ');
   copy(ressym[opmultu  ].reslab, 'multu     ');
   copy(ressym[opjr     ].reslab, 'jr        ');
   copy(ressym[opex     ].reslab, 'ex        ');
   copy(ressym[oprl     ].reslab, 'rl        ');
   copy(ressym[opotdrw  ].reslab, 'otdrw     ');
   copy(ressym[opoutdw  ].reslab, 'outdw     ');
   copy(ressym[opor     ].reslab, 'or        ');
   copy(ressym[opdefbe  ].reslab, 'defbe     ');
   copy(ressym[opalignv ].reslab, 'alignv    ');
   copy(ressym[oprr     ].reslab, 'rr        ');
   copy(ressym[opindrw  ].reslab, 'indrw     ');
   copy(ressym[opotirw  ].reslab, 'otirw     ');
   copy(ressym[opepuf   ].reslab, 'epuf      ');
   copy(ressym[opindw   ].reslab, 'indw      ');
   copy(ressym[opjaf    ].reslab, 'jaf       ');
   copy(ressym[opepum   ].reslab, 'epum      ');
   copy(ressym[opexts   ].reslab, 'exts      ');
   copy(ressym[opdefle  ].reslab, 'defle     ');
   copy(ressym[opdeflf  ].reslab, 'deflf     ');
   copy(ressym[opoutiw  ].reslab, 'outiw     ');
   copy(ressym[opldw    ].reslab, 'ldw       ');
   copy(ressym[opoutw   ].reslab, 'outw      ');
   copy(ressym[opcpw    ].reslab, 'cpw       ');
   copy(ressym[opendif  ].reslab, 'endif     ');
   copy(ressym[opretb   ].reslab, 'retb      ');
   copy(ressym[opdefsf  ].reslab, 'defsf     ');
   copy(ressym[opsc     ].reslab, 'sc        ');
   copy(ressym[opdefdw  ].reslab, 'defdw     ');
   copy(ressym[opsubw   ].reslab, 'subw      ');
   copy(ressym[opextern ].reslab, 'extern    ');
   copy(ressym[optset   ].reslab, 'tset      ');
   copy(ressym[opdefhw  ].reslab, 'defhw     ');
   copy(ressym[optsti   ].reslab, 'tsti      ');
   copy(ressym[opextl   ].reslab, 'extl      ');
   copy(ressym[opepui   ].reslab, 'epui      ');
   copy(ressym[opmacro  ].reslab, 'macro     ');
   copy(ressym[opldctl  ].reslab, 'ldctl     ');
   copy(ressym[opinclude].reslab, 'include   ');
   copy(ressym[opequ    ].reslab, 'equ       ');
   copy(ressym[opglobal ].reslab, 'global    ');
   copy(ressym[opdefqw  ].reslab, 'defqw     ');
   copy(ressym[opdefvs  ].reslab, 'defvs     ');
   copy(ressym[opalignp ].reslab, 'alignp    ');
   copy(ressym[opif     ].reslab, 'if        ');
   copy(ressym[opdefb   ].reslab, 'defb      ');
   copy(ressym[opelse   ].reslab, 'else      ');
   copy(ressym[opelseif ].reslab, 'elseif    ');
   copy(ressym[opassm   ].reslab, 'assm      ');
   copy(ressym[opdeff   ].reslab, 'deff      ');
   copy(ressym[opretil  ].reslab, 'retil     ');
   copy(ressym[opbendian].reslab, 'bendian   ');
   copy(ressym[oplendian].reslab, 'lendian   ');
   copy(ressym[opdefps  ].reslab, 'defps     ');
   copy(ressym[opmultuw ].reslab, 'multuw    ');
   copy(ressym[opdefbef ].reslab, 'defbef    ');
   copy(ressym[opcall   ].reslab, 'call      ');
   copy(ressym[opdefw   ].reslab, 'defw      ');

   { chains }

   ressym[opdec    ].reschn := opdjnz;
   ressym[ophalt   ].reschn := opldud;
   ressym[oplddr   ].reschn := opotdrw;
   ressym[opinc    ].reschn := opexts;
   ressym[opcpdr   ].reschn := ophalt;
   ressym[opldir   ].reschn := opotirw;
   ressym[opindr   ].reschn := opmultu;
   ressym[opcpir   ].reschn := opoutiw;
   ressym[opdaa    ].reschn := opepuf;
   ressym[opinir   ].reschn := opadc;
   ressym[opadd    ].reschn := opepui;
   ressym[opreti   ].reschn := opassm;
   ressym[opccf    ].reschn := opdec;
   ressym[opiniw   ].reschn := opmepu;
   ressym[opotdr   ].reschn := opretn;
   ressym[oplda    ].reschn := opjaf;
   ressym[opand    ].reschn := opextl;
   ressym[opldd    ].reschn := opotir;
   ressym[oppush   ].reschn := optset;
   ressym[opcpd    ].reschn := opouti;
   ressym[opsbc    ].reschn := opmult;
   ressym[opneg    ].reschn := opinc;
   ressym[opcpi    ].reschn := opscf;
   ressym[opjar    ].reschn := oplendian;
   ressym[opcpl    ].reschn := oprla;
   ressym[opini    ].reschn := opsla;
   ressym[opouti   ].reschn := opsubw;
   ressym[oprra    ].reschn := opoutw;
   ressym[opsra    ].reschn := opinclude;
   ressym[oprrc    ].reschn := opldw;
   ressym[oprrd    ].reschn := opdefbef;
   ressym[opsub    ].reschn := opres;
   ressym[opret    ].reschn := opequ;
   ressym[oprla    ].reschn := opbit;
   ressym[opei     ].reschn := opout;
   ressym[opxor    ].reschn := oprst;
   ressym[opres    ].reschn := opcpw;
   ressym[oprst    ].reschn := opif;
   ressym[opcp     ].reschn := opglobal;
   ressym[opadc    ].reschn := opindw;
   ressym[opldud   ].reschn := opoutdw;
   ressym[opim     ].reschn := opsc;
   ressym[opmepu   ].reschn := opepum;
   ressym[opjp     ].reschn := opelseif;
   ressym[opmultu  ].reschn := opretb;
   ressym[opex     ].reschn := opalignp;
   ressym[opotdrw  ].reschn := opdefw;
   ressym[opoutdw  ].reschn := opelse;
   ressym[opexts   ].reschn := optsti;
   ressym[opextl   ].reschn := opbendian;
   ressym[opmacro  ].reschn := opdefps;
   ressym[opmultuw ].reschn := opindrw;

end;

begin
end.
